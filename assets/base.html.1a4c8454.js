import{r as t,o,a as r,b as n,e as p,F as l,c as e,d as s}from"./app.7d96ffc6.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=e(`<p><a name="mDwW6"></a></p><h3 id="boolean" tabindex="-1"><a class="header-anchor" href="#boolean" aria-hidden="true">#</a> boolean</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">isDone</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><a name="sjBQH"></a></p><h3 id="number" tabindex="-1"><a class="header-anchor" href="#number" aria-hidden="true">#</a> number</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">decLiteral</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">hexLiteral</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0xf00d</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">binaryLiteral</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0b1010</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">octalLiteral</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0o744</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><a name="tR4Ye"></a></p><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> string</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">&quot;bob&quot;</span><span class="token punctuation">;</span>
name <span class="token operator">=</span> <span class="token string">&quot;smith&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><a name="R9OPM"></a></p><h3 id="null\u548Cundefined" tabindex="-1"><a class="header-anchor" href="#null\u548Cundefined" aria-hidden="true">#</a> null\u548Cundefined</h3><p><strong>null\u548Cundefined\u662F\u6240\u6709\u7C7B\u578B\u7684\u5B50\u7C7B\u578B\uFF08\u53EF\u4EE5\u8D4B\u503C\u7ED9\u4EFB\u4F55\u7C7B\u578B\uFF09</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Not much else we can assign to these variables!</span>
<span class="token keyword">let</span> <span class="token literal-property property">u</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a name="VnYG4"></a></p><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">list</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u5143\u7D20\u7C7B\u578B\u540E\u9762\u63A5\u4E0A []</span>
<span class="token keyword">let</span> <span class="token literal-property property">list</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u4F7F\u7528\u6570\u7EC4\u6CDB\u578B\uFF0CArray&lt;\u5143\u7D20\u7C7B\u578B&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><a name="lluVi"></a></p><h3 id="\u5143\u7EC4tuple" tabindex="-1"><a class="header-anchor" href="#\u5143\u7EC4tuple" aria-hidden="true">#</a> \u5143\u7EC4Tuple</h3><p>\u5143\u7EC4\u7C7B\u578B\u5141\u8BB8\u8868\u793A\u4E00\u4E2A\u5DF2\u77E5\u5143\u7D20\u6570\u91CF\u548C\u7C7B\u578B\u7684\u6570\u7EC4\uFF0C\u5404\u5143\u7D20\u7684\u7C7B\u578B\u4E0D\u5FC5\u76F8\u540C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Declare a tuple type</span>
<span class="token keyword">let</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">[</span>string<span class="token punctuation">,</span> number<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// Initialize it</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
<span class="token comment">// Initialize it incorrectly</span>
x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><a name="BTfxO"></a></p><h3 id="\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E" aria-hidden="true">#</a> \u679A\u4E3E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>Red<span class="token punctuation">,</span> Green<span class="token punctuation">,</span> Blue<span class="token punctuation">}</span>

<span class="token keyword">enum</span> Color <span class="token punctuation">{</span>Red <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Green<span class="token punctuation">,</span> Blue<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">c</span><span class="token operator">:</span> Color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Green<span class="token punctuation">;</span>

<span class="token keyword">enum</span> Color <span class="token punctuation">{</span>Red <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Green <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> Blue <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">c</span><span class="token operator">:</span> Color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Green<span class="token punctuation">;</span>

<span class="token keyword">enum</span> Color <span class="token punctuation">{</span>Red <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Green<span class="token punctuation">,</span> Blue<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token literal-property property">colorName</span><span class="token operator">:</span> string <span class="token operator">=</span> Color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>colorName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u663E\u793A&#39;Green&#39;\u56E0\u4E3A\u4E0A\u9762\u4EE3\u7801\u91CC\u5B83\u7684\u503C\u662F2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><a name="EYklv"></a></p><h3 id="any" tabindex="-1"><a class="header-anchor" href="#any" aria-hidden="true">#</a> Any</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">notSure</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
notSure <span class="token operator">=</span> <span class="token string">&quot;maybe a string instead&quot;</span><span class="token punctuation">;</span>
notSure <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// okay, definitely a boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a name="QLuyp"></a></p><h3 id="void-\u8868\u793A\u6CA1\u6709\u4EFB\u4F55\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#void-\u8868\u793A\u6CA1\u6709\u4EFB\u4F55\u7C7B\u578B" aria-hidden="true">#</a> Void(\u8868\u793A\u6CA1\u6709\u4EFB\u4F55\u7C7B\u578B)</h3><p>\u58F0\u660E\u4E00\u4E2Avoid\u7C7B\u578B\u7684\u53D8\u91CF\u6CA1\u6709\u4EC0\u4E48\u5927\u7528\uFF0C\u56E0\u4E3A\u4F60\u53EA\u80FD\u4E3A\u5B83\u8D4B\u4E88undefined\u548Cnull\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">unusable</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><a name="fOrNb"></a></p><h3 id="never" tabindex="-1"><a class="header-anchor" href="#never" aria-hidden="true">#</a> never</h3><p>never\u7C7B\u578B\u8868\u793A\u7684\u662F\u90A3\u4E9B\u6C38\u4E0D\u5B58\u5728\u7684\u503C\u7684\u7C7B\u578B<br>never\u7C7B\u578B\u662F\u4EFB\u4F55\u7C7B\u578B\u7684\u5B50\u7C7B\u578B\uFF0C\u4E5F\u53EF\u4EE5\u8D4B\u503C\u7ED9\u4EFB\u4F55\u7C7B\u578B\uFF1B\u7136\u800C\uFF0C_\u6CA1\u6709_\u7C7B\u578B\u662Fnever\u7684\u5B50\u7C7B\u578B\u6216\u53EF\u4EE5\u8D4B\u503C\u7ED9never\u7C7B\u578B\uFF08\u9664\u4E86never\u672C\u8EAB\u4E4B\u5916\uFF09\u3002 \u5373\u4F7F any\u4E5F\u4E0D\u53EF\u4EE5\u8D4B\u503C\u7ED9never</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD4\u56DEnever\u7684\u51FD\u6570\u5FC5\u987B\u5B58\u5728\u65E0\u6CD5\u8FBE\u5230\u7684\u7EC8\u70B9</span>
<span class="token keyword">function</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">message</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> never <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u63A8\u65AD\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3Anever</span>
<span class="token keyword">function</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Something failed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD4\u56DEnever\u7684\u51FD\u6570\u5FC5\u987B\u5B58\u5728\u65E0\u6CD5\u8FBE\u5230\u7684\u7EC8\u70B9</span>
<span class="token keyword">function</span> <span class="token function">infiniteLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> never <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><a name="zbfNe"></a></p><h3 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> object</h3><p>object\u8868\u793A\u975E\u539F\u59CB\u7C7B\u578B\uFF0C\u4E5F\u5C31\u662F\u9664number\uFF0Cstring\uFF0Cboolean\uFF0Csymbol\uFF0Cnull\u6216undefined\u4E4B\u5916\u7684\u7C7B\u578B\u3002<br>\u4F7F\u7528object\u7C7B\u578B\uFF0C\u5C31\u53EF\u4EE5\u66F4\u597D\u7684\u8868\u793A\u50CFObject.create\u8FD9\u6837\u7684API\u3002\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>declare <span class="token keyword">function</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">o</span><span class="token operator">:</span> object <span class="token operator">|</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
<span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>

<span class="token function">create</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">create</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><a name="jFQLG"></a></p><h3 id="\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u7C7B\u578B\u65AD\u8A00</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">someValue</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token string">&quot;this is a string&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">strLength</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>string<span class="token operator">&gt;</span>someValue<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token literal-property property">someValue</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token string">&quot;this is a string&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">strLength</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token punctuation">(</span>someValue <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><a name="lA6i0"></a></p><h3 id="\u8054\u5408\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B</h3><p>\u8054\u5408\u7C7B\u578B \u8868\u793A\u53D6\u503C\u53EF\u4EE5\u4E3A\u591A\u79CD\u7C7B\u578B\u4E2D\u7684\u4E00\u79CD\u3002<br>\u53EF\u4EE5\u4F7F\u7528typeof\u4EE5\u53CAin\u8BED\u6CD5\u6765\u505A\u7C7B\u578B\u4FDD\u62A4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token literal-property property">myFavoriteNumber</span><span class="token operator">:</span> string <span class="token operator">|</span> number<span class="token punctuation">;</span>
myFavoriteNumber <span class="token operator">=</span> <span class="token string">&#39;seven&#39;</span><span class="token punctuation">;</span>
myFavoriteNumber <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>

<span class="token comment">// typeof \u505A\u7C7B\u578B\u4FDD\u62A4</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">first</span><span class="token operator">:</span> string <span class="token operator">|</span> number<span class="token punctuation">,</span> <span class="token literal-property property">second</span><span class="token operator">:</span> string <span class="token operator">|</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> first <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> second <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>first<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>second<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> first <span class="token operator">+</span> second
<span class="token punctuation">}</span>

<span class="token comment">// in \u8BED\u6CD5\u505A\u7C7B\u578B\u4FDD\u62A4</span>
<span class="token keyword">function</span> <span class="token function">trainAnialSecond</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">animal</span><span class="token operator">:</span> Brid <span class="token operator">|</span> Dog</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;sing&quot;</span> <span class="token keyword">in</span> animal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        animal<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        animal<span class="token punctuation">.</span><span class="token function">bark</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><a name="Mgvli"></a></p><h2 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h2><p><a name="Rdt2e"></a></p><h3 id="\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> \u51FD\u6570\u58F0\u660E</h3><p>\u4E24\u79CD\u5E38\u89C1\u7684\u5B9A\u4E49\u51FD\u6570\u7684\u65B9\u5F0F\u2014\u2014\u51FD\u6570\u58F0\u660E\uFF08Function Declaration\uFF09\u548C\u51FD\u6570\u8868\u8FBE\u5F0F\uFF08Function Expression\uFF09<br>\u4E00\u4E2A\u51FD\u6570\u6709\u8F93\u5165\u548C\u8F93\u51FA\uFF0C\u8981\u5728 TypeScript \u4E2D\u5BF9\u5176\u8FDB\u884C\u7EA6\u675F\uFF0C\u9700\u8981\u628A\u8F93\u5165\u548C\u8F93\u51FA\u90FD\u8003\u8651\u5230\uFF0C\u5176\u4E2D\u51FD\u6570\u58F0\u660E\u7684\u7C7B\u578B\u5B9A\u4E49\u8F83\u7B80\u5355\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a name="FtYN7"></a></p><h3 id="\u51FD\u6570\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u51FD\u6570\u8868\u8FBE\u5F0F</h3><p>\u5199\u4E00\u4E2A\u5BF9\u51FD\u6570\u8868\u8FBE\u5F0F\uFF08Function Expression\uFF09\u7684\u5B9A\u4E49\uFF0C\u53EF\u80FD\u4F1A\u5199\u6210\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">mySum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> number <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a name="DIPx8"></a></p><h3 id="\u53EF\u9009\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u53C2\u6570" aria-hidden="true">#</a> \u53EF\u9009\u53C2\u6570</h3><p>\u4E0E\u63A5\u53E3\u4E2D\u7684\u53EF\u9009\u5C5E\u6027\u7C7B\u4F3C\uFF0C\u6211\u4EEC\u7528 ? \u8868\u793A\u53EF\u9009\u7684\u53C2\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">firstName</span><span class="token operator">:</span> string<span class="token punctuation">,</span> lastName<span class="token operator">?</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// do</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tomcat <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tom <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u53EF\u9009\u53C2\u6570\u5FC5\u987B\u63A5\u5728\u5FC5\u9700\u53C2\u6570\u540E\u9762\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u53EF\u9009\u53C2\u6570\u540E\u9762\u4E0D\u5141\u8BB8\u518D\u51FA\u73B0\u5FC5\u9700\u53C2\u6570\u4E86\uFF1A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><a name="jcRi8"></a></p><h3 id="\u9ED8\u8BA4\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u53C2\u6570" aria-hidden="true">#</a> \u9ED8\u8BA4\u53C2\u6570</h3><p>\u5728 ES6 \u4E2D\uFF0C\u6211\u4EEC\u5141\u8BB8\u7ED9\u51FD\u6570\u7684\u53C2\u6570\u6DFB\u52A0\u9ED8\u8BA4\u503C\uFF0CTypeScript \u4F1A\u5C06\u6DFB\u52A0\u4E86\u9ED8\u8BA4\u503C\u7684\u53C2\u6570\u8BC6\u522B\u4E3A\u53EF\u9009\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">buildName</span><span class="token punctuation">(</span>firstName<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">lastName</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> tomcat <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tom <span class="token operator">=</span> <span class="token function">buildName</span><span class="token punctuation">(</span><span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><a name="fEPxC"></a></p><h3 id="\u5269\u4F59\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u5269\u4F59\u53C2\u6570" aria-hidden="true">#</a> \u5269\u4F59\u53C2\u6570</h3><p>ES6 \u4E2D\uFF0C\u53EF\u4EE5\u4F7F\u7528 ...rest \u7684\u65B9\u5F0F\u83B7\u53D6\u51FD\u6570\u4E2D\u7684\u5269\u4F59\u53C2\u6570\uFF08rest \u53C2\u6570\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">array</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>items<span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><a name="mYHgq"></a></p><h3 id="\u91CD\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u91CD\u8F7D" aria-hidden="true">#</a> \u91CD\u8F7D</h3><p>\u91CD\u8F7D\u5141\u8BB8\u4E00\u4E2A\u51FD\u6570\u63A5\u53D7\u4E0D\u540C\u6570\u91CF\u6216\u7C7B\u578B\u7684\u53C2\u6570\u65F6\uFF0C\u4F5C\u51FA\u4E0D\u540C\u7684\u5904\u7406\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E0A\u8FB9\u662F\u58F0\u660E</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">arg1</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">arg2</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> string
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">arg1</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">arg2</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> number
<span class="token comment">// \u56E0\u4E3A\u6211\u4EEC\u5728\u4E0B\u8FB9\u6709\u5177\u4F53\u51FD\u6570\u7684\u5B9E\u73B0\uFF0C\u6240\u4EE5\u8FD9\u91CC\u5E76\u4E0D\u9700\u8981\u6DFB\u52A0 declare \u5173\u952E\u5B57</span>

<span class="token comment">// \u4E0B\u8FB9\u662F\u5B9E\u73B0</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">arg1</span><span class="token operator">:</span> string <span class="token operator">|</span> number<span class="token punctuation">,</span> <span class="token literal-property property">arg2</span><span class="token operator">:</span> string <span class="token operator">|</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728\u5B9E\u73B0\u4E0A\u6211\u4EEC\u8981\u6CE8\u610F\u4E25\u683C\u5224\u65AD\u4E24\u4E2A\u53C2\u6570\u7684\u7C7B\u578B\u662F\u5426\u76F8\u7B49\uFF0C\u800C\u4E0D\u80FD\u7B80\u5355\u7684\u5199\u4E00\u4E2A arg1 + arg2</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> arg1 <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> arg2 <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arg1 <span class="token operator">+</span> arg2
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> arg1 <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> arg2 <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arg1 <span class="token operator">+</span> arg2
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><a name="T5L31"></a></p><h2 id="\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a> \u63A5\u53E3</h2><p>\u5728 TypeScript \u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u63A5\u53E3\uFF08Interfaces\uFF09\u6765\u5B9A\u4E49\u5BF9\u8C61\u7684\u7C7B\u578B\u3002 <a name="YWqfn"></a></p>`,74),k={id:"\u4EC0\u4E48\u662F\u63A5\u53E3",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#\u4EC0\u4E48\u662F\u63A5\u53E3","aria-hidden":"true"},"#",-1),m=s(),d={href:"https://lilixikun.github.io/blog/ts/%E5%9F%BA%E7%A1%80.html#%E4%BB%80%E4%B9%88%E6%98%AF%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"},y=s("#"),g=s("\u4EC0\u4E48\u662F\u63A5\u53E3"),h=n("p",null,[s("\u5728\u9762\u5411\u5BF9\u8C61\u8BED\u8A00\u4E2D\uFF0C\u63A5\u53E3\uFF08Interfaces\uFF09\u662F\u4E00\u4E2A\u5F88\u91CD\u8981\u7684\u6982\u5FF5\uFF0C\u5B83\u662F\u5BF9\u884C\u4E3A\u7684\u62BD\u8C61\uFF0C\u800C\u5177\u4F53\u5982\u4F55\u884C\u52A8\u9700\u8981\u7531\u7C7B\uFF08classes\uFF09\u53BB\u5B9E\u73B0\uFF08implement\uFF09\u3002"),n("br"),s("TypeScript \u4E2D\u7684\u63A5\u53E3\u662F\u4E00\u4E2A\u975E\u5E38\u7075\u6D3B\u7684\u6982\u5FF5\uFF0C\u9664\u4E86\u53EF\u7528\u4E8E\u5BF9\u7C7B\u7684\u4E00\u90E8\u5206\u884C\u4E3A\u8FDB\u884C\u62BD\u8C61\u4EE5\u5916\uFF0C\u4E5F\u5E38\u7528\u4E8E\u5BF9\u300C\u5BF9\u8C61\u7684\u5F62\u72B6\uFF08Shape\uFF09\u300D\u8FDB\u884C\u63CF\u8FF0\u3002 "),n("a",{name:"bVxOu"})],-1),v={id:"\u5B9A\u4E49\u63A5\u53E3",tabindex:"-1"},f=n("a",{class:"header-anchor",href:"#\u5B9A\u4E49\u63A5\u53E3","aria-hidden":"true"},"#",-1),w=s(),j={href:"https://lilixikun.github.io/blog/ts/%E5%9F%BA%E7%A1%80.html#%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"},x=s("#"),_=s("\u5B9A\u4E49\u63A5\u53E3"),N=e(`<p>\u5982\u4E0B,\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A\u63A5\u5355\u7684\u63A5\u53E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">tom</span><span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><a name="sb9NR"></a></p><h3 id="\u53EF\u9009\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u5C5E\u6027" aria-hidden="true">#</a> \u53EF\u9009\u5C5E\u6027</h3><p>\u6709\u65F6\u6211\u4EEC\u5E0C\u671B\u4E0D\u8981\u5B8C\u5168\u5339\u914D\u4E00\u4E2A\u5F62\u72B6\uFF0C\u90A3\u4E48\u53EF\u4EE5\u7528\u53EF\u9009\u5C5E\u6027:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">tom</span><span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u53EF\u9009\u5C5E\u6027\u7684\u542B\u4E49\u662F\u8BE5\u5C5E\u6027\u53EF\u4EE5\u4E0D\u5B58\u5728\u3002\u8FD9\u65F6<strong>\u4ECD\u7136\u4E0D\u5141\u8BB8\u6DFB\u52A0\u672A\u5B9A\u4E49\u7684\u5C5E\u6027</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">tom</span><span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;male&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u62A5\u9519 &#39;gender&#39; does not exist in type &#39;Person&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><a name="f2oIJ"></a></p><h3 id="\u4EFB\u610F\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u4EFB\u610F\u5C5E\u6027" aria-hidden="true">#</a> \u4EFB\u610F\u5C5E\u6027</h3><p>\u6709\u65F6\u5019\u6211\u4EEC\u5E0C\u671B\u4E00\u4E2A\u63A5\u53E3\u5141\u8BB8\u6709\u4EFB\u610F\u7684\u5C5E\u6027\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5982\u4E0B\u65B9\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">[</span>propName<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">tom</span><span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;male&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4F7F\u7528 [propName: string] \u5B9A\u4E49\u4E86\u4EFB\u610F\u5C5E\u6027\u53D6 string \u7C7B\u578B\u7684\u503C<br>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C<strong>\u4E00\u65E6\u5B9A\u4E49\u4E86\u4EFB\u610F\u5C5E\u6027\uFF0C\u90A3\u4E48\u786E\u5B9A\u5C5E\u6027\u548C\u53EF\u9009\u5C5E\u6027\u7684\u7C7B\u578B\u90FD\u5FC5\u987B\u662F\u5B83\u7684\u7C7B\u578B\u7684\u5B50\u96C6</strong>,\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">[</span>propName<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">tom</span><span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;male&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u62A5\u9519 Type &#39;number&#39; is not assignable to type &#39;string&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0A\u4F8B\u4E2D\uFF0C\u4EFB\u610F\u5C5E\u6027\u7684\u503C\u5141\u8BB8\u662F string\uFF0C\u4F46\u662F\u53EF\u9009\u5C5E\u6027 age \u7684\u503C\u5374\u662F number\uFF0Cnumber \u4E0D\u662F string \u7684\u5B50\u5C5E\u6027\uFF0C\u6240\u4EE5\u62A5\u9519\u4E86\u3002<br>\u4E00\u4E2A\u63A5\u53E3\u4E2D\u53EA\u80FD\u5B9A\u4E49\u4E00\u4E2A\u4EFB\u610F\u5C5E\u6027\u3002\u5982\u679C\u63A5\u53E3\u4E2D\u6709\u591A\u4E2A\u7C7B\u578B\u7684\u5C5E\u6027\uFF0C\u5219\u53EF\u4EE5\u5728\u4EFB\u610F\u5C5E\u6027\u4E2D\u4F7F\u7528<strong>\u8054\u5408\u7C7B\u578B</strong>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">[</span>propName<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> string <span class="token operator">|</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">tom</span><span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;male&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><a name="XuYQv"></a></p><h3 id="\u53EA\u8BFB\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u53EA\u8BFB\u5C5E\u6027" aria-hidden="true">#</a> \u53EA\u8BFB\u5C5E\u6027</h3><p>\u6709\u65F6\u5019\u6211\u4EEC\u5E0C\u671B\u5BF9\u8C61\u4E2D\u7684\u4E00\u4E9B\u5B57\u6BB5\u53EA\u80FD\u5728\u521B\u5EFA\u7684\u65F6\u5019\u88AB\u8D4B\u503C\uFF0C\u90A3\u4E48\u53EF\u4EE5\u7528 readonly \u5B9A\u4E49\u53EA\u8BFB\u5C5E\u6027:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    readonly id<span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">[</span>propName<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">tom</span><span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">89757</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;male&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

tom<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">9527</span><span class="token punctuation">;</span>
<span class="token comment">// index.ts(14,5): error TS2540: Cannot assign to &#39;id&#39; because it is a constant or a read-only property.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u4E0A\u4F8B\u4E2D\uFF0C\u4F7F\u7528 readonly \u5B9A\u4E49\u7684\u5C5E\u6027 id \u521D\u59CB\u5316\u540E\uFF0C\u53C8\u88AB\u8D4B\u503C\u4E86\uFF0C\u6240\u4EE5\u62A5\u9519\u4E86\u3002<br><strong>\u6CE8\u610F\uFF0C\u53EA\u8BFB\u7684\u7EA6\u675F\u5B58\u5728\u4E8E\u7B2C\u4E00\u6B21\u7ED9\u5BF9\u8C61\u8D4B\u503C\u7684\u65F6\u5019\uFF0C\u800C\u4E0D\u662F\u7B2C\u4E00\u6B21\u7ED9\u53EA\u8BFB\u5C5E\u6027\u8D4B\u503C\u7684\u65F6\u5019\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    readonly id<span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">[</span>propName<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token literal-property property">tom</span><span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;male&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

tom<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">89757</span><span class="token punctuation">;</span>
<span class="token comment">// index.ts(13,5): error TS2540: Cannot assign to &#39;id&#39; because it is a constant or a read-only property.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4E0A\u4F8B\u4E2D\uFF0C\u62A5\u9519\u4FE1\u606F\u6709\u4E24\u5904\uFF0C\u7B2C\u4E00\u5904\u662F\u5728\u5BF9 tom \u8FDB\u884C\u8D4B\u503C\u7684\u65F6\u5019\uFF0C\u6CA1\u6709\u7ED9 id \u8D4B\u503C\u3002<br>\u7B2C\u4E8C\u5904\u662F\u5728\u7ED9 tom.id \u8D4B\u503C\u7684\u65F6\u5019\uFF0C\u7531\u4E8E\u5B83\u662F\u53EA\u8BFB\u5C5E\u6027\uFF0C\u6240\u4EE5\u62A5\u9519\u4E86\u3002</p>`,23);function E(T,q){const a=t("ExternalLinkIcon");return o(),r(l,null,[u,n("h3",k,[b,m,n("a",d,[y,p(a)]),g]),h,n("h3",v,[f,w,n("a",j,[x,p(a)]),_]),N],64)}var B=c(i,[["render",E]]);export{B as default};
