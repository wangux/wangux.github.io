import{r as t,o as e,a as o,b as s,e as c,F as l,c as a,d as n}from"./app.7d96ffc6.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=a(`<h1 id="js\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#js\u57FA\u7840" aria-hidden="true">#</a> JS\u57FA\u7840</h1><h2 id="js\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#js\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> js\u6570\u636E\u7C7B\u578B</h2><p>\u57FA\u672C\u6570\u636E\u7C7B\u578B number string boolean null undefined biginit symbol<br>\u5F15\u7528\u6570\u636E\u7C7B\u578B object</p><p><a name="a5dXL"></a></p><h2 id="js\u7C7B\u578B\u6821\u9A8C\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#js\u7C7B\u578B\u6821\u9A8C\u65B9\u5F0F" aria-hidden="true">#</a> js\u7C7B\u578B\u6821\u9A8C\u65B9\u5F0F</h2><p>1.typeof (\u57FA\u7840\u7C7B\u578Btypeof\u65E0\u6CD5\u5224\u65ADnull\uFF0C\u5176\u4ED6\u90FD\u6B63\u5E38\u5224\u65AD\uFF0C\u5F15\u7528\u6570\u636E\u7C7B\u578B\u9664\u4E86function\u4E3Afunction\u5176\u4ED6\u90FD\u4E3Aobject)<br>typeof null // Object<br>typeof function //function</p><p>2.instanceof(\u5224\u65AD\u662F\u5426\u5728\u540C\u4E00\u539F\u578B\u94FE\u4E0A)<br>arr instanceof Array //true<br>arr instanceof Object //true</p><p>3.arr.constructor === Array //true constructor\u6307\u5411\u6784\u9020\u51FD\u6570 null\u548Cundefined\u65E0\u6CD5\u5224\u65AD</p><p>4.Object.prototype.toString.call(123) //[Object Number] //\u5168\u80FD\u5224\u65AD\u6CD5</p><p><a name="SDls1"></a></p><h2 id="\u4E25\u683C\u6A21\u5F0F\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E25\u683C\u6A21\u5F0F\u4F5C\u7528" aria-hidden="true">#</a> \u4E25\u683C\u6A21\u5F0F\u4F5C\u7528</h2><p>1.\u5168\u5C40\u53D8\u91CF\u58F0\u660E\u65F6\uFF0C\u5FC5\u987B\u52A0var<br>2.this\u65E0\u6CD5\u6307\u5411\u5168\u5C40\u5BF9\u8C61<br>3.\u51FD\u6570\u5185\u90E8\u4E0D\u5141\u8BB8\u51FA\u73B0\u91CD\u540D\u53C2\u6570<br>function test(a,b,b){} \u4E25\u683C\u6A21\u5F0F\u4F1A\u62A5\u9519<br>4.arguments\u5BF9\u8C61\u4E0D\u5141\u8BB8\u88AB\u52A8\u6001\u6539\u53D8\uFF0C\u4E0D\u80FD\u88AB\u81EA\u8C03\u7528</p><p><a name="SQEDG"></a></p><h2 id="var\u3001let\u3001const\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#var\u3001let\u3001const\u533A\u522B" aria-hidden="true">#</a> var\u3001let\u3001const\u533A\u522B</h2><p>var\u548Clet\u7684\u533A\u522B<br>1.let\u58F0\u660E\u7684\u53D8\u91CF\u4E0D\u80FD\u91CD\u590D\u547D\u540D<br>2.let\u58F0\u660E\u7684\u53D8\u91CF\u5177\u6709\u5757\u7EA7\u4F5C\u7528\u57DF\uFF0C\u4E0D\u5B58\u5728\u53D8\u91CF\u63D0\u5347\uFF0C\u5728\u51FD\u6570\u5185\u4F1A\u51FA\u73B0\u6682\u65F6\u6027\u6B7B\u533A<br>const\u548Clet\u51E0\u4E4E\u4E00\u6837\uFF0Clet\u6709\u7684\u5C5E\u6027const\u90FD\u6709\uFF0Cconst\u58F0\u660E\u7684\u662F\u4E00\u4E2A\u5E38\u91CF\uFF0C\u4E0D\u80FD\u88AB\u6539\u53D8\uFF0C\u5F15\u7528\u7C7B\u578B\u53EF\u4EE5\u6539\u53D8\u56E0\u4E3A\u6539\u7684\u662F\u5730\u5740</p><p><a name="hrQTT"></a></p><h2 id="\u666E\u901A\u51FD\u6570\u548C\u7BAD\u5934\u51FD\u6570\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u666E\u901A\u51FD\u6570\u548C\u7BAD\u5934\u51FD\u6570\u7684\u533A\u522B" aria-hidden="true">#</a> \u666E\u901A\u51FD\u6570\u548C\u7BAD\u5934\u51FD\u6570\u7684\u533A\u522B</h2><p>1.\u7BAD\u5934\u51FD\u6570\u662F\u4E00\u4E2A\u533F\u540D\u51FD\u6570\uFF0C\u4E0D\u80FD\u505A\u6784\u9020\u51FD\u6570\uFF0C\u4E0D\u80FDnew\uFF08\u7BAD\u5934\u51FD\u6570\u672C\u8EAB\u6CA1\u6709this\uFF0C\u51FD\u6570\u5185\u90E8\u7684this\u5C31\u662F\u5916\u5C42\u7684this\uFF0C\u6240\u4EE5\u4E0D\u80FD\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\uFF09<br>2.\u7BAD\u5934\u51FD\u6570\u7684this\u81EA\u52A8\u7ED1\u5B9A\u5916\u5C42this<br>3.\u7BAD\u5934\u51FD\u6570\u6CA1\u6709arguments\u5C5E\u6027\uFF0C\u53EF\u4EE5\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26<br>4.bind\u3001call\u3001apply\u4E0D\u80FD\u6539\u53D8this\u6307\u5411\uFF08\u7BAD\u5934\u51FD\u6570\u7684this\u662F\u5728js\u6267\u884C\u4E0A\u4E0B\u6587\u521B\u5EFA\u9636\u6BB5\u786E\u5B9A\u7684\uFF0C\u666E\u901A\u51FD\u6570\u7684this\u662F\u5728js\u6267\u884C\u4E0A\u4E0B\u6587\u6267\u884C\u9636\u6BB5\u4E5F\u5C31\u662F\u8C03\u7528\u51FD\u6570\u65F6\u786E\u5B9A\u7684\uFF09</p><p><a name="k0NUE"></a></p><h2 id="new\u4E00\u4E2A\u5BF9\u8C61\u90FD\u505A\u4E86\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#new\u4E00\u4E2A\u5BF9\u8C61\u90FD\u505A\u4E86\u4EC0\u4E48" aria-hidden="true">#</a> new\u4E00\u4E2A\u5BF9\u8C61\u90FD\u505A\u4E86\u4EC0\u4E48</h2><p>1.\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7A7A\u5BF9\u8C61<br>2.\u5C06\u65B0\u5BF9\u8C61\u7684\u539F\u578B\u5C5E\u6027\u6307\u5411\u6784\u9020\u51FD\u6570\u7684prototype<br>3.\u5C06\u6784\u9020\u51FD\u6570\u7684this\u6307\u5411\u65B0\u5BF9\u8C61\uFF0C\u6267\u884C\u6784\u9020\u51FD\u6570\uFF0C\u5C06\u5C5E\u6027\u6DFB\u52A0\u7ED9\u65B0\u5BF9\u8C61<br>4.\u8FD4\u56DE\u65B0\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">newObj</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>fn<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>fn<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> res <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  		<span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><a name="TMGIr"></a></p><h2 id="proto\u3001prototype\u3001constructor\u7684\u533A\u522B-\u539F\u578B\u548C\u539F\u578B\u94FE" tabindex="-1"><a class="header-anchor" href="#proto\u3001prototype\u3001constructor\u7684\u533A\u522B-\u539F\u578B\u548C\u539F\u578B\u94FE" aria-hidden="true">#</a> <strong>proto</strong>\u3001prototype\u3001constructor\u7684\u533A\u522B\uFF08\u539F\u578B\u548C\u539F\u578B\u94FE\uFF09</h2><p>1.<strong>proto__\u548Cconstructor\u662F\u5BF9\u8C61\u624D\u6709\u7684\u5C5E\u6027\uFF0Cprototype\u662F\u51FD\u6570\u7279\u6709\u7684\u5C5E\u6027<br>2.\u5B9E\u4F8B\u5BF9\u8C61\u7684__proto__\u6307\u5411\u6784\u9020\u51FD\u6570\u7684prototype,\u610F\u8BC6\u662F\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u6307\u5411\u6784\u9020\u51FD\u6570\u7684prototype\uFF08\u539F\u578B\u5BF9\u8C61\uFF09<br>(\u5B9E\u4F8B\u7684__proto</strong> === \u6784\u9020\u51FD\u6570\u7684prototype)<br>3.prototype\u662F\u51FD\u6570\u7279\u6709\u7684\uFF0C\u5B83\u662F\u7531\u4E00\u4E2A\u51FD\u6570\u6307\u5411\u4E00\u4E2A\u5BF9\u8C61<br>4.constructor\u662F\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u5B83\u662F\u7531\u4E00\u4E2A\u5BF9\u8C61\u6307\u5411\u4E00\u4E2A\u51FD\u6570\uFF08\u5B9E\u4F8B\u7684constructor === \u6784\u9020\u51FD\u6570\uFF09,\u610F\u8BC6\u5C31\u662F\u6307\u5411\u8BE5\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570\uFF0Cconstructor\u7684\u7EC8\u70B9\u53EF\u4EE5\u770B\u6210\u662FFunction\u8FD9\u4E2A\u51FD\u6570<br>5.\u627E\u4E00\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u4F1A\u6CBF\u7740\u5BF9\u8C61\u7684__proto__\u5C5E\u6027\u7EE7\u7EED\u5F80\u4E0A\u627E\uFF0C\u627E\u5230__proto__\u5C5E\u6027\u6307\u5411\u7684\u5BF9\u8C61\uFF08\u7236\u5BF9\u8C61\uFF09,\u8FD9\u6837\u4E00\u76F4\u627E\u5C31\u5F62\u6210\u4E86\u4E00\u6761\u94FE\u8DEF\uFF0C\u8FD9\u6761\u94FE\u8DEF\u5C31\u53EB\u505A\u539F\u578B\u94FE\u3002</p><p><a name="gSWYM"></a></p><h2 id="\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#\u95ED\u5305" aria-hidden="true">#</a> \u95ED\u5305</h2><p>\u95ED\u5305\u662F\u7531\u51FD\u6570\u4EE5\u53CA\u58F0\u660E\u8BE5\u51FD\u6570\u7684\u8BCD\u6CD5\u73AF\u5883\u7EC4\u5408\u800C\u6210\u7684\u3002\uFF08\u539F\u7406\uFF1A\u51FA\u53D1\u4E86js\u7684\u5783\u573E\u56DE\u6536\u673A\u5236\uFF09<br>\u95ED\u5305\u7684\u4F5C\u7528\uFF1F<br>1.\u80FD\u591F\u8BFB\u53D6\u51FD\u6570\u5185\u90E8\u7684\u53D8\u91CF<br>2.\u80FD\u591F\u4F7F\u5C40\u90E8\u53D8\u91CF\u4E00\u76F4\u4FDD\u5B58\u5728\u5185\u5B58\u4E2D<br>\u95ED\u5305\u5E94\u7528\uFF1A1.for\u5FAA\u73AF\u53D6\u5F02\u6B65\u503C2.\u6A21\u62DF\u79C1\u6709\u53D8\u91CF<br>\u5783\u573E\u56DE\u6536\uFF1A\u5C06\u8981\u5220\u9664\u7684\u6570\u636E\u6682\u5B58\u5728\u67D0\u4E2A\u533A\u57DF\uFF0C\u5E76\u4E0D\u662F\u771F\u6B63\u7684\u5220\u9664\uFF0C\u9664\u975E\u771F\u7684\u7528\u4E0D\u5230\u4E86\uFF0C\u518D\u6B21\u6E05\u7A7A\u8FD9\u4E2A\u6682\u5B58\u533A\u57DF\u624D\u4F1A\u5F7B\u5E95\u5220\u9664</p><p><a name="gXMHA"></a></p><h2 id="es6\u65B0\u589E" tabindex="-1"><a class="header-anchor" href="#es6\u65B0\u589E" aria-hidden="true">#</a> ES6\u65B0\u589E</h2><p>let\u3001const\u3001\u6269\u5C55\u8FD0\u7B97\u7B26\u3001\u7BAD\u5934\u51FD\u6570\u3001symbol\u3001map\u3001set\u3001\u89E3\u6784\u8D4B\u503C\u3001generator-yield\u3001<br>for...in\u8FED\u4EE3\u4E00\u4E2A\u5BF9\u8C61\u7684\u9664\u4E86symbol\u5916\u7684\u6240\u6709\u53EF\u679A\u4E3E\u5C5E\u6027\u3002<br>for...of\u8FED\u4EE3\u7C7B\u6570\u7EC4\uFF08\u6CA1\u6709key\u7684\u6570\u636E\uFF09</p><p>string\u76F8\u5173\u65B9\u6CD5<br>charCodeAt(index) //\u53C2\u6570\u5B57\u7B26\u7D22\u5F15\uFF0C\u8FD4\u56DEutf-16\u7F16\u7801\u5355\u5143<br>fromCharCode() //\u53C2\u6570utf-16\u7F16\u7801\u5355\u5143\uFF0C\u8FD4\u56DE\u5B57\u7B26\u4E32<br>codePointAt() //\u53C2\u6570\u5B57\u7B26\u7D22\u5F15\uFF0C\u8FD4\u56DEUnicode\u7F16\u7801\u70B9\u503C\u7684\u6574\u6570\uFF0C\u6CA1\u6709\u8FD9\u4E2A\u7D22\u5F15\u8FD4\u56DEundefined<br>fromCodePoint() //\u53C2\u6570Unicode\u7F16\u7801\u70B9\u6570\uFF0C\u8FD4\u56DE\u5B57\u7B26\u4E32</p><p><a name="gqaBz"></a></p><h2 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> Ajax</h2><p>\u7528\u6765\u505A\u5F02\u6B65\u65E0\u52A0\u8F7D\u5237\u65B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/send&#39;</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readystate <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//readystate: 0\u8FD8\u6CA1\u6709\u8C03\u7528send  1\u8C03\u7528send\uFF0C\u6B63\u5728\u53D1\u9001\u8BF7\u6C42  2\u5DF2\u63A5\u6536\u54CD\u5E94\u5185\u5BB9  3\u89E3\u6790\u54CD\u5E94\u5185\u5BB9  4\u89E3\u6790\u5B8C\u6210</span>
<span class="token comment">//state\u72B6\u6001\u7801   200\u6210\u529F  304\u7F13\u5B58  401\u65E0\u6743\u9650  404\u627E\u4E0D\u5230  500\u62A5\u9519</span>
<span class="token comment">//\u540C\u6E90\u7B56\u7565   \u540C\u534F\u8BAE\u3001\u540C\u57DF\u540D\u3001\u540C\u7AEF\u53E3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><a name="InXrI"></a></p><h2 id="\u6A21\u5757\u5316" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757\u5316" aria-hidden="true">#</a> \u6A21\u5757\u5316</h2><p>Amd \u4F9D\u8D56\u524D\u7F6E require.js<br>Cmd \u6309\u9700\u52A0\u8F7D sea.js<br>CommonJS \u6309\u9700\u52A0\u8F7D node.js<br>Amd\u4F1A\u5148\u628A\u6240\u9700\u8981\u7684\u4F9D\u8D56\u90FD\u52A0\u8F7D\u5B8C\u6210\uFF0C\u624D\u8FDB\u5165\u56DE\u8C03<br>cmd\u9700\u8981\u7684\u65F6\u5019\u52A0\u8F7D\u4F9D\u8D56</p><p><a name="go0GP"></a></p><h2 id="\u672C\u5730\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#\u672C\u5730\u5B58\u50A8" aria-hidden="true">#</a> \u672C\u5730\u5B58\u50A8</h2><p>cookie\uFF1A\u4F1A\u8BDD\u8DDF\u8E2A\u6280\u672F<br>cookie\u7684\u4FE1\u606F\u5B58\u50A8\u5728\u6D4F\u89C8\u5668\u7684\u7F13\u5B58\u4E2D\uFF08\u672C\u5730\u5B58\u50A8\uFF09<br>cookie\u7684\u7279\u70B9\uFF1A<br>1.\u53EA\u80FD\u5B58\u6587\u672C<br>2.\u5927\u5C0F\u9650\u52364-10k<br>3.\u6570\u91CF\u9650\u5236\uFF0C50\u6761\u5DE6\u53F3<br>4.\u4E0D\u80FD\u8DE8\u57DF<br>5.\u4E0D\u540C\u6D4F\u89C8\u5668\u7684cookie\u4E5F\u4E0D\u76F8\u7B49<br>6.\u65F6\u95F4\u9650\u5236\uFF0C\u9ED8\u8BA4\u4E3A\u5173\u95ED\u6D4F\u89C8\u5668\u9500\u6BC1</p><p>\u64CD\u4F5Ccookie\u548ClocalStorage</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//cookie</span>
<span class="token comment">//\u589E  			</span>
document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;name=admin&#39;</span>
<span class="token comment">//\u6539			</span>
document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;name=test&#39;</span>
<span class="token comment">//\u8BBE\u7F6E\u6709\u6548\u671F	</span>
document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;name=test;expires=&#39;</span><span class="token operator">+</span>time<span class="token punctuation">;</span> <span class="token comment">//time\u4E3A\u65E5\u671F\u5BF9\u8C61</span>
<span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
time<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8BBE\u7F6E\u4E09\u5929\u540E\u8FC7\u671F</span>

<span class="token comment">//\u5220</span>
<span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
d<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&#39;name=test;expires=&#39;</span> <span class="token operator">+</span> d<span class="token punctuation">;</span> <span class="token comment">//\u628A\u6709\u6548\u671F\u8BBE\u4E3A\u524D\u4E00\u5929\uFF0C\u5219\u81EA\u52A8\u9500\u6BC1</span>
<span class="token comment">//\u67E5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span>


<span class="token comment">//localStorage</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>cookie\u3001localStorage\u548CsessionStorage\u533A\u522B<br>\u4E0D\u540C\u70B9<br>1.cookie\u59CB\u7EC8\u5728\u540C\u6E90\u7684http\u8BF7\u6C42\u4E2D\u643A\u5E26\uFF0C\u5373\u4F7F\u4E0D\u9700\u8981cookie\u5728\u6D4F\u89C8\u5668\u548C\u670D\u52A1\u5668\u4E4B\u95F4\u6765\u56DE\u4F20\u9012\u3002\u800ClocalStorage\u548CSessionStorage\u59CB\u7EC8\u5B58\u50A8\u5728\u672C\u5730\uFF0C\u4E0D\u4F1A\u548C\u670D\u52A1\u5668\u901A\u4FE1\uFF0C\u4E5F\u4E0D\u4F1A\u628A\u6570\u636E\u4F20\u9012\u5230\u670D\u52A1\u5668\u3002<br>2.\u5B58\u50A8\u5927\u5C0F\u4E0D\u540C\uFF0Ccookie\u5B58\u50A84-10k\uFF0C\u800CStorage\u5B58\u50A8\u7A7A\u95F4\u53EF\u4EE5\u8FBE\u52305M<br>3.\u5B58\u50A8\u65F6\u95F4\u4E0D\u540C\uFF0Ccookie\u53EF\u4EE5\u8BBE\u7F6E\u8FC7\u671F\u65F6\u95F4\uFF1BlocalStorage\u662F\u6301\u4E45\u8BDD\u5B58\u50A8\uFF1BsessionStorage\u662F\u4F1A\u8BDD\u7EA7\u5B58\u50A8\u5173\u95ED\u6D4F\u89C8\u5668\u4F1A\u88AB\u6E05\u9664<br>\u76F8\u540C\u70B9\uFF1A\u90FD\u4E0D\u5B89\u5168\u3001\u4E0D\u80FD\u8DE8\u57DF\u3001\u4E0D\u80FD\u8DE8\u6D4F\u89C8\u5668</p><p><a name="Vssyf"></a></p><h2 id="\u9875\u9762\u91CD\u7ED8-repaint-\u548C\u91CD\u6392-reflow" tabindex="-1"><a class="header-anchor" href="#\u9875\u9762\u91CD\u7ED8-repaint-\u548C\u91CD\u6392-reflow" aria-hidden="true">#</a> \u9875\u9762\u91CD\u7ED8\uFF08Repaint\uFF09\u548C\u91CD\u6392\uFF08Reflow\uFF09</h2><p>\u91CD\u6392\u5C31\u662Fdom\u5143\u7D20\u5C3A\u5BF8\u548C\u4F4D\u7F6E\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u91CD\u6392\u5FC5\u5B9A\u91CD\u7ED8<br>\u91CD\u7ED8\u662F\u6307dom\u5143\u7D20\u7684\u6837\u5F0F\u53D8\u4E86\uFF0C\u4F8B\u5982\u989C\u8272\uFF1B\u91CD\u7ED8\u4E0D\u4E00\u5B9A\u91CD\u6392</p><p><a name="T5Tts"></a></p><h2 id="js\u517C\u5BB9\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#js\u517C\u5BB9\u95EE\u9898" aria-hidden="true">#</a> js\u517C\u5BB9\u95EE\u9898</h2><p>innerHtml\u548CinnerText<br>\u6EDA\u52A8\u6761 document.ducumentElement.scrollTop || document.body.scrollTop<br>\u7F51\u9875\u53EF\u89C6\u533A\u57DF\u517C\u5BB9 window.innerHeight || document.documentElement.ClientHeight<br> window.innerWidth || document.documentElement.ClientWidth<br>\u975E\u884C\u5185\u6837\u5F0F\u83B7\u53D6 dom.currentStyle[attr] || getComputedStyle(obj, false)[attr]<br>\u4E8B\u4EF6\u5BF9\u8C61\u517C\u5BB9 (event) =&gt; event || window.event<br>\u963B\u6B62\u4E8B\u4EF6\u5192\u6CE1\u517C\u5BB9 e.cancleBubble = true || e.stopPropagation()<br>\u963B\u6B62\u9ED8\u8BA4\u4E8B\u4EF6 e.preventDefault() || return false(e.returnValue = false)<br>\u4E8B\u4EF6\u76D1\u542C\u517C\u5BB9 dom.onclick || dom.addEventListener(&#39;click&#39;, cb) || dom.AttachEvent(&#39;onclick&#39;, cb)<br> dom.removeEventListener(&#39;click&#39;, cb) || dom.detachEvent(&#39;onclick&#39;, cb)<br>\u4E8B\u4EF6\u76EE\u6807\u5BF9\u8C61 e.target || e.srcElement</p><p><a name="UOizN"></a></p><h2 id="\u624B\u5199promise" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199promise" aria-hidden="true">#</a> \u624B\u5199promise</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Promise</span> <span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span>
    self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
    self<span class="token punctuation">.</span>onResolvedCallBacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    self<span class="token punctuation">.</span>onRejectedCallBacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">function</span> <span class="token function">resolve</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;resolved&#39;</span>
                self<span class="token punctuation">.</span>data <span class="token operator">=</span> value
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>onResolvedCallBacks<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    self<span class="token punctuation">.</span>onResolvedCallBacks<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">reject</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                self<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span>
                self<span class="token punctuation">.</span>data <span class="token operator">=</span> reason
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>onRejectedCallBacks<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    self<span class="token punctuation">.</span>onRejectedCallBacks<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">resolvePromise</span> <span class="token punctuation">(</span><span class="token parameter">promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> then
    <span class="token keyword">let</span> thenCalledOrThrow <span class="token operator">=</span> <span class="token boolean">false</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>promise2 <span class="token operator">===</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;\u5FAA\u73AF\u62A5\u9519&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            x<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> val<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            x<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            then <span class="token operator">=</span> x<span class="token punctuation">.</span>then
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">rs</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>thenCalledOrThrow<span class="token punctuation">)</span> <span class="token keyword">return</span>
                    thenCalledOrThrow <span class="token operator">=</span> <span class="token boolean">true</span>
                    <span class="token keyword">return</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> val<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">rj</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>thenCalledOrThrow<span class="token punctuation">)</span> <span class="token keyword">return</span>
                    thenCalledOrThrow <span class="token operator">=</span> <span class="token boolean">true</span>
                    <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>thenCalledOrThrow<span class="token punctuation">)</span> <span class="token keyword">return</span>
            thenCalledOrThrow <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    
<span class="token punctuation">}</span>

<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">onResolved<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">let</span> promise2

    onResolved <span class="token operator">=</span> <span class="token keyword">typeof</span> onResolved <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onResolved</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> v<span class="token punctuation">}</span>
    onRejected <span class="token operator">=</span> <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onRejected</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> e<span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;resolved&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onResolved</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
                    <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
                    <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            self<span class="token punctuation">.</span>onResolvedCallBacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onResolved</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
                    <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
    
            self<span class="token punctuation">.</span>onRejectedCallBacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
                    <span class="token function">resolvePromise</span><span class="token punctuation">(</span>promise2<span class="token punctuation">,</span> x<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">catch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">finally</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">onSettled</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">onSettled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">onSettled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> e
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">any</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        promises <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span> <span class="token operator">?</span> promises <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">let</span> len <span class="token operator">=</span> promises<span class="token punctuation">.</span>length
        <span class="token comment">// \u7528\u4E8E\u6536\u96C6\u6240\u6709 reject </span>
        <span class="token keyword">let</span> errs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token comment">// \u5982\u679C\u4F20\u5165\u7684\u662F\u4E00\u4E2A\u7A7A\u6570\u7EC4\uFF0C\u90A3\u4E48\u5C31\u76F4\u63A5\u8FD4\u56DE AggregateError</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AggregateError</span><span class="token punctuation">(</span><span class="token string">&#39;All promises were rejected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        promises<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">promise</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            len<span class="token operator">--</span>
            errs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AggregateError</span><span class="token punctuation">(</span>errs<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">all</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            promises<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> res
                index<span class="token operator">++</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">race</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            promises<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">allSettled</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> promises<span class="token punctuation">.</span>length
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            promises<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> res <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">,</span> reason <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">--</span>count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span>deferred <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function-variable function">defer</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> dfd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    dfd<span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        dfd<span class="token punctuation">.</span>resolve <span class="token operator">=</span> resolve
        dfd<span class="token punctuation">.</span>reject <span class="token operator">=</span> reject
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> dfd
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
    module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Promise
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br></div></div><p><a name="pQywH"></a></p><h2 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h2><p>\u521B\u5EFA\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61\uFF0C\u901A\u8FC7\u4EE3\u7406\u5BF9\u8C61\u62E6\u622A\u5BF9\u5BF9\u8C61\u7684\u64CD\u4F5C<br>Reflect\u4E0D\u662F\u4E00\u4E2A\u51FD\u6570\u5BF9\u8C61\uFF0C\u6CA1\u6709\u6784\u9020\u51FD\u6570\u4E0D\u80FDnew\uFF0C\u76F4\u63A5\u8C03\u7528\u9759\u6001\u65B9\u6CD5\uFF0C\u7C7B\u4F3CMath\u3002<br>//handler.apply\u62E6\u622A\u51FD\u6570\u7684\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">apply</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> thisArg<span class="token punctuation">,</span> argumentsList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u53C2\u6570&#39;</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> thisArg<span class="token punctuation">,</span> argumentsList<span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token function">target</span><span class="token punctuation">(</span>argumentsList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> argumentsList<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> proxy1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: 3</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">proxy1</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// expected output: 30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>//handler.defineProperty</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> handle <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">defineProperty</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u89E6\u53D1get&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key <span class="token punctuation">,</span>value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u89E6\u53D1set&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> handle<span class="token punctuation">)</span>
<span class="token keyword">var</span> desc <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> desc<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>a<span class="token punctuation">)</span>
p<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><a name="oWejb"></a></p><h2 id="\u96F6\u788E" tabindex="-1"><a class="header-anchor" href="#\u96F6\u788E" aria-hidden="true">#</a> \u96F6\u788E</h2>`,62),k=n("DOM\uFF08\u6587\u6863\u5BF9\u8C61\u6A21\u578B\uFF09\u3001Shadow DOM\u3001Virtual DOM\u533A\u522B\u4EE5\u53CABOM\uFF08\u6D4F\u89C8\u5668\u5BF9\u8C61\u6A21\u578B\uFF09"),b=s("br",null,null,-1),m=n("DOM\u6D4F\u89C8\u5668\u771F\u5B9EDOM\uFF0Cdocument\u662F\u5B83\u7684\u4E00\u4E2A\u5BF9\u8C61"),d=s("br",null,null,-1),f=n("Shadow Dom\u4F9D\u8D56\u4E8EDOM\uFF0C\u4F7F\u7528"),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/attachShadow",target:"_blank",rel:"noopener noreferrer"},h=n("Element.attachShadow()"),w=n("\u65B9\u6CD5\u5C06\u4E00\u4E2Ashadow root\u9644\u52A0\u5230\u4E00\u4E2Adom\u5143\u7D20\u4E0A\uFF08WebComponent\u539F\u7406\uFF09"),g=s("br",null,null,-1),v=n("Virtual DOM\u5C31\u662F\u7528js\u8868\u793ADOM\u7684\u6570\u636E\u7ED3\u6784"),j=s("br",null,null,-1),x=n("BOM\u662F\u6D4F\u89C8\u5668\u5BF9\u8C61\u6A21\u578B\uFF0Cwindow\u662F\u4ED6\u7684\u4E00\u4E2A\u5BF9\u8C61"),_=a(`<p>arguments.length\u8BBF\u95EE\u5B9E\u53C2\u4E2A\u6570</p><p>\u9012\u5F52\u51FD\u6570<br>1.\u6709\u5224\u65AD\u6761\u4EF6<br>2.\u6709\u53C2\u6570\u53D8\u5316<br>3.\u6709return</p><p>\u6570\u7EC4\u64CD\u4F5C<br>1.\u589E\u52A0\uFF08\u90FD\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u957F\u5EA6\uFF09<br>arr.push() //\u672B\u5C3E\u6DFB\u52A0\u5143\u7D20<br>arr.unshift() //\u5F00\u5934\u6DFB\u52A0\u5143\u7D20</p><p>2.\u5220\u9664\uFF08\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u957F\u5EA6\uFF09<br>arr.shift() //\u4ECE\u672B\u4F4D\u5220\u9664 \u8FD4\u56DE\u88AB\u5220\u9664\u5143\u7D20\uFF0C<br>arr.pop()//\u4ECE\u9996\u4F4D\u5220\u9664 \u8FD4\u56DE\u88AB\u5220\u9664\u5143\u7D20<br>arr.splice(n,u,num) //n\u5F00\u59CB\u4F4D\u7F6E\uFF0Cu\u5220\u9664\u4E2A\u6570\uFF0Cnum\u589E\u52A0\u5143\u7D20</p><p>3.\u622A\u53D6<br>arr.slice(n,m) //n\u5F00\u59CB\u4F4D\u7F6E\uFF0Cm\u7ED3\u675F\u4F4D\u7F6E\uFF0C\u4E0D\u5305\u62ECm\uFF08\u4E0D\u4F1A\u6539\u53D8\u6570\u7EC4\u957F\u5EA6\uFF09</p><p>arr.sort((a,b) =&gt; b-a) \uFF08\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u6392\u5E8F\uFF09<br>arr.reverse() \uFF08\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u6392\u5E8F\uFF09<br>arr.join()<br>arr.concat() \uFF08\u4E0D\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\uFF09<br>arr.tostring() //\u9ED8\u8BA4\u5206\u5272\u7B26&#39;,&#39;</p><p>for...in\u8FED\u4EE3\u4E00\u4E2A\u5BF9\u8C61\u7684\u9664\u4E86symbol\u5916\u7684\u6240\u6709\u53EF\u679A\u4E3E\u5C5E\u6027\u3002\u904D\u5386key<br>for...of\u8FED\u4EE3\u7C7B\u6570\u7EC4\uFF08\u6CA1\u6709key\u7684\u6570\u636E\uFF09\u904D\u5386\u503C</p><p>\u4E25\u683C\u6A21\u5F0F\u7684\u597D\u5904\uFF08&quot;use strict&quot;\uFF09<br>1.\u6D88\u9664js\u7684\u4E0D\u5408\u7406\uFF0C\u4E0D\u4E25\u8C28\uFF0C\u51CF\u5C11\u4E00\u4E9B\u602A\u5F02\u884C\u4E3A<br>2.\u6D88\u9664\u4EE3\u7801\u8FD0\u884C\u7684\u4E00\u4E9B\u4E0D\u5B89\u5168\u4E4B\u5904<br>3.\u63D0\u4F9B\u7F16\u8BD1\u5668\u6548\u7387<br>4.\u4E3A\u672A\u6765\u7684js\u505A\u597D\u94FA\u57AB\uFF08es5\uFF0C6\uFF09</p><p>\u533F\u540D\u51FD\u6570\u7684\u597D\u5904 \u7F3A\u70B9<br>1.\u8F83\u5C11\u51FD\u6570\u547D\u540D 1.\u4EE3\u7801\u590D\u7528\u6027\u5DEE<br>2.\u5B89\u5168\u6027\u66F4\u9AD8(\u95ED\u5305)<br>3.\u65B9\u4FBF\u8FD0\u884C</p><p>\u6570\u7EC4es5\u65B0\u589E\u65B9\u6CD5<br>indexof<br>foreach<br>map<br>filter</p><p>\u5B57\u7B26\u4E32\u65B9\u6CD5<br>str.indexof() //\u53C2\u6570\u662F\u5B57\u7B26\uFF0C\u8FD4\u56DE\u5728\u5B57\u7B26\u4E32\u4E2D\u7684\u7D22\u5F15\u4F4D\u7F6E,\u4E0D\u5B58\u5728\u8FD4\u56DE-1<br>str.charat() //\u53C2\u6570\u662F\u7D22\u5F15\uFF0C\u8FD4\u56DE\u7D22\u5F15\u5BF9\u5E94\u7684\u5B57\u7B26<br>str.charCodeat() //\u53C2\u6570\u662F\u7D22\u5F15\uFF0C\u8FD4\u56DE\u7D22\u5F15\u5BF9\u5E94\u5B57\u7B26\u7684Utf-16\u7F16\u7801\u5355\u5143<br>str.fromCharCode() //\u53C2\u6570\u662FUTF-16\u7F16\u7801\u5355\u5143\uFF0C\u8FD4\u56DE\u5B57\u7B26</p><p>//\u622A\u53D6<br>str.slice(n, m) //n\u4EE3\u8868\u5F00\u59CB\u4F4D\u7F6E\uFF0Cm\u7ED3\u675F\u4F4D\u7F6E\uFF08\u53D6\u5230\u524D\u4E00\u4F4D\uFF09\uFF0C\u8D1F\u6570\u4ECE\u672B\u5C3E\u5F00\u59CB\uFF0C\u8FD4\u56DE\u622A\u53D6\u7684\u5B57\u7B26\u4E32\uFF08\u539F\u5B57\u7B26\u4E32\u4E0D\u53D8\uFF09<br>str.substring() //\u540Cslice\uFF0C\u53C2\u6570\u4E0D\u80FD\u4E3A\u8D1F\u6570\uFF0C\u8FD4\u56DE\u622A\u53D6\u7684\u5B57\u7B26\u4E32\uFF08\u539F\u5B57\u7B26\u4E32\u4E0D\u53D8\uFF09<br>str.substr(n, m) //n\u5F00\u59CB\u4F4D\u7F6E\uFF0C m\u622A\u53D6\u4F4D\u6570\uFF0C \u8FD4\u56DE\u622A\u53D6\u7684\u5B57\u7B26\u4E32\uFF08\u539F\u5B57\u7B26\u4E32\u4E0D\u53D8\uFF09</p><p>str.split(&#39;,&#39;) //\u4EE5,\u53F7\u4E3A\u5206\u9694\u8F6C\u6362\u6210\u6570\u7EC4\uFF0C\u8FD4\u56DE\u6570\u7EC4<br>str.replace(&#39;-&#39;, &#39;&#39;) //\u628Astr\u4E2D&#39;-&#39;\u66FF\u6362\u6210\u7A7A\u5B57\u7B26\u4E32, \u8FD4\u56DE\u66FF\u6362\u540E\u7684\u5B57\u7B26\uFF08\u539F\u5B57\u7B26\u4E32\u4E0D\u53D8\uFF09<br>str.includes(&#39;a&#39;) //str\u4E2D\u662F\u5426\u5305\u542B&#39;a&#39;, \u8FD4\u56DEboolean<br>str.startsWith(&#39;a&#39;) //str\u662F\u5426\u662F\u4EE5&#39;a&#39;\u5F00\u5934</p><p>toLowerCase() //\u8FD4\u56DE\u5C0F\u5199\u7684\u5B57\u7B26\u4E32\uFF08\u539F\u5B57\u7B26\u4E32\u4E0D\u53D8\uFF09<br>toUppercase() //\u8FD4\u56DE\u5927\u5199\u7684\u5B57\u7B26\u4E32\uFF08\u539F\u5B57\u7B26\u4E32\u4E0D\u53D8\uFF09</p><p>\u57FA\u7840\u7C7B<br>Math.round() //\u56DB\u820D\u4E94\u5165<br>Math.ceil() //\u5411\u4E0A\u53D6\u6574<br>Math.floor() //\u5411\u4E0B\u53D6\u6574<br>Math.abs() //\u53D6\u7EDD\u5BF9\u503C<br>Math.max(a,b,c) //\u53D6\u6240\u6709\u53C2\u6570\u4E2D\u7684\u6700\u5927\u503C<br>Math.min() //\u540Cmax<br>Math.random() //\u53D6\u968F\u673A\u6570,\u8FD4\u56DE0-1\u4E4B\u95F4\u7684\u6D6E\u70B9\u6570\uFF08\u4E0D\u5305\u62EC1\uFF09<br>Math.pow(n, m) //\u6307\u6570\u51FD\u6570\uFF0Cn\u8868\u793A\u5E95\u6570\uFF0Cm\u8868\u793A\u6307\u6570<br>Math.PI</p><p>\u8FDB\u5236\u8F6C\u6362<br>x.toString(2) //2\u8FDB\u5236<br>x.toString(8) //8\u8FDB\u5236<br>x.toString(16) //16\u8FDB\u5236<br>parseInt(x, n) //\u5176\u4ED6\u8FDB\u5236\u8F6C10\u8FDB\u5236 x\u8F93\u5165\u5185\u5BB9\uFF0Cn\u8868\u793A\u8981\u8F6C\u6362\u4E3A\u4EC0\u4E48\u8FDB\u5236\uFF0Ces5\u9ED8\u8BA4\u8F6C\u6362\u4E3A10\u8FDB\u5236\uFF0C\u4E4B\u524D\u662F\u53EF\u80FD\u4E3A8\u8FDB\u5236\u621610\u8FDB\u5236\uFF0C\u4E14\u4E0D\u80FD\u4E0D\u4F20</p><p>\u65E5\u671F\u5BF9\u8C61<br>const date = new Date()<br>date.getFullYear()<br>date.getMonth()<br>date.getDate()<br>date.getHours()<br>date.getMinutes()<br>date.getSeconds()<br>date.getMillSeconds() //\u6BEB\u79D2<br>date.getDay() //\u661F\u671F\u51E0\uFF0C\u8FD4\u56DE0-6,0\u8868\u793A\u661F\u671F\u65E5<br>date.getTime() //\u65F6\u95F4\u6233\uFF0C\u8FD4\u56DE\u8DDD\u79BB1970.1.1\u65E5\u7684\u6BEB\u79D2\u6570</p><p>JS\u4E09\u5927\u7EC4\u6210\u90E8\u5206<br>EcmaScript Bom Dom<br>Bom\u662FBrowser Object Model\u6D4F\u89C8\u5668\u5BF9\u8C61\u6A21\u578B\uFF08\u6838\u5FC3\u5BF9\u8C61window\uFF09<br>Dom\u662FDocument Object Model \u6587\u6863\u5BF9\u8C61\u6A21\u578B \uFF08\u6838\u5FC3\u5BF9\u8C61document\uFF09</p><p>history<br>history.forward() //\u524D\u8FDB<br>history.back() //\u540E\u9000<br>history.reload() //\u5237\u65B0<br>history.go(num) //num\u4E3A\u6B63\u6570\uFF0C0\uFF0C-1\uFF0C0\u4EE3\u8868\u5237\u65B0\uFF0C-1\u4EE3\u8868\u540E\u9000\uFF0Cnum\u5927\u4E8E0\u4EE3\u8868\u524D\u8FDBnum\u4E2A\u9875\u9762</p><p>location \u7EDF\u4E00\u8D44\u6E90\u5B9A\u4F4D\u7B26(\u7BA1\u7406/\u8BBF\u95EEURL)<br>location.href = &#39;www.baidu.com&#39;</p><p>Navigator \u83B7\u53D6\u6D4F\u89C8\u5668\u4FE1\u606F<br>navigator.userAgent //\u8FD4\u56DE\u6D4F\u89C8\u5668\u4FE1\u606F\u3002\u540D\u79F0\u3001\u7248\u672C\u53F7\u3001\u64CD\u4F5C\u7CFB\u7EDF</p><p>window.onload() //\u9875\u9762\u7ED3\u6784\u52A0\u8F7D\u5B8C\u6210<br>window.onscroll() //\u9875\u9762\u6EDA\u52A8<br>window.onresize() //\u76D1\u542C\u9875\u9762\u5927\u5C0F\u6539\u53D8</p><p>//\u83B7\u53D6\u9875\u9762\u6EDA\u52A8\u6761\u8DDD\u79BB\u9876\u90E8\u8DDD\u79BB\uFF08\u517C\u5BB9\u6027\u95EE\u9898\uFF09<br>document.documentElement.scrollTop<br>document.body.scrollTop</p><p>document.documentElementScollLeft<br>document.body.scrollLeft</p><p>DOM\u8282\u70B9<br>1.\u5143\u7D20\u8282\u70B9\uFF08html\u6807\u7B7E\uFF09<br>2.\u5C5E\u6027\u8282\u70B9\uFF08\u6807\u7B7E\u5C5E\u6027\uFF09<br>3.\u6587\u672C\u8282\u70B9\uFF08\u6587\u5B57\uFF09<br>4.\u6587\u6863\u8282\u70B9\uFF08document\uFF09<br>5.\u6CE8\u91CA\u8282\u70B9\uFF08\u6CE8\u91CA\u5185\u5BB9\uFF09</p><p>\u83B7\u53D6dom\u9009\u62E9\u5668\u65B9\u6CD5<br>1.getElementById(&#39;#box&#39;)<br>2.getElementsByTagName(&#39;h5&#39;)//\u8FD4\u56DE\u96C6\u5408<br>3.getElementsByName(&#39;input&#39;) //\u901A\u8FC7name\u5C5E\u6027\u83B7\u53D6<br>4.getElementsByClassName() //\u901A\u8FC7class\u540D\u83B7\u53D6<br>5.document.querySelector()//\u83B7\u53D6\u5355\u4E2A\u5143\u7D20<br>6.document.querySelectorAll() //\u8FD4\u56DE\u96C6\u5408</p><p>\u5C5E\u6027\u64CD\u4F5C<br>//\u5185\u7F6E\u5C5E\u6027\u83B7\u53D6<br>div.id = &#39;box&#39;<br>div.title = &#39;title&#39;</p><p>//\u975E\u5185\u7F6E\u5C5E\u6027<br>div.getAttribute(&#39;data&#39;)<br>div.setAttribute(&#39;data&#39;, &#39;1&#39;)<br>div.removeAttribute(&#39;data&#39;)</p><p>innerHtml //\u4F4E\u7248\u672C\u4E0D\u517C\u5BB9<br>innerText</p><p>div.children //\u83B7\u53D6\u5143\u7D20\u5B50\u8282\u70B9<br>div.childNodes //\u83B7\u53D6\u6240\u6709\u5B50\u8282\u70B9\uFF08\u6240\u6709\u7C7B\u578B\u8282\u70B9\uFF09<br> nodetype<br>\u5143\u7D20\u8282\u70B9 1<br>\u5C5E\u6027\u8282\u70B9 2<br>\u6587\u672C\u8282\u70B9 3<br>\u6587\u6863\u8282\u70B9 9<br>\u6CE8\u91CA\u8282\u70B9 8</p><p>\u5220\u9664\u8282\u70B9<br>obj.remove()<br>\u7236\u7EA7.removeChild()<br>obj.outerHtml = &#39;&#39;</p><p>DOM\u5143\u7D20\u7684\u57FA\u672C\u64CD\u4F5C<br>//\u5143\u7D20\u8282\u70B9\u64CD\u4F5C<br>var div = document.createElement(&#39;div&#39;)<br>div.innerHTML = &#39;\u8FD9\u662F\u65B0\u521B\u5EFA\u7684div&#39;<br>div.className = &#39;box&#39;<br>div.style.cssText = &#39;width:200px;height:200px;&#39;<br>div.appendChild(child)<br>div.removeChild(child)<br>div.outerHtml = &#39;&#39;;</p><p>\u6587\u672C\u8282\u70B9\u7684\u64CD\u4F5C<br>document.createTextNode(&#39;\u4F60\u597D&#39;)</p><p>\u975E\u884C\u5185\u6837\u5F0F\u83B7\u53D6<br>1.\u73B0\u4EE3\u6D4F\u89C8\u5668 \uFF1AgetComputedStyle(obj, false)[attr]<br>obj:dom\u5143\u7D20<br>false\uFF1A\u662F\u5426\u83B7\u53D6\u7684\u662F\u4F2A\u5143\u7D20\u7684\u5C5E\u6027\u6837\u5F0F\uFF0C\u5982\u679C\u6CA1\u6709\u4F2A\u5143\u7D20\uFF0C\u90A3\u4E48\u7ED9false\u6216\u5219null<br>attr: \u5C5E\u6027\u540D\u79F0 er:width<br>2.ie\u4F4E\u7248\u672C\u6D4F\u89C8\u5668\uFF1Aobj.currentStyle[attr]<br>obj:dom\u5143\u7D20<br>attr:\u5C5E\u6027\u540D\u79F0</p><p>offsetLeft<br>offsetTop<br>offsetWidth //element.width + element.padding + element.border(\u4E0D\u5305\u62ECmargin\uFF0C\u6709\u6EDA\u52A8\u6761\u8FD8\u5305\u62EC\u6EDA\u52A8\u6761\u7684\u5BBD\u5EA6)<br>offsetHeight //\u540C\u4E0A<br>offsetParent //\u83B7\u53D6\u5143\u7D20\u7684\u6700\u8FD1\u7684\u5177\u6709\u5B9A\u4F4D\u5C5E\u6027\u7684\u7236\u7EA7\u5143\u7D20\uFF0C\u5982\u679C\u90FD\u6CA1\u6709\u5219\u8FD4\u56DEbody</p><p>clientWidth //\u89C6\u53E3\u5BBD\u5EA6<br>clientHeight //\u89C6\u53E3\u9AD8\u5EA6</p><p>\u4E8B\u4EF6<br>div.onmousemove = function (event) {<br>var e = event || window.event;<br>console.log(e.target) //\u4E8B\u4EF6\u6E90<br>console.log(e.type) //\u4E8B\u4EF6\u7C7B\u578B<br>console.log(e.buttons) //\u9F20\u6807\u6309\u952E\uFF0C 1\u5DE6\u6309\u94AE\uFF0C2\u53F3\u6309\u94AE\uFF0C4\u6ED1\u8F6E<br>console.log(e.offsetX, e.offsetY) //\u76F8\u5BF9\u4E8B\u4EF6\u6E90\u7684\u504F\u79FB<br>console.log(e.clientX, e.clientY) //\u76F8\u5BF9\u4E8E\u9875\u9762\u53EF\u89C6\u533A\u57DF\u7684\u5750\u6807<br>console.log(e.pageX, e.pageY) //\u76F8\u5BF9\u4E8E\u9875\u9762\u7684\u5750\u6807<br>console.log(e.screenX, e.screenY) //\u76F8\u5BF9\u4E8E\u7535\u8111\u5C4F\u5E55\u7684\u5750\u6807<br>}</p><p>onclick<br>onmousedown //\u9F20\u6807\u6309\u4E0B\u4E8B\u4EF6 <br>onmousemove //\u9F20\u6807\u79FB\u52A8\u4E8B\u4EF6<br>onmouseup //\u9F20\u6807\u62AC\u8D77\u4E8B\u4EF6<br>onmouseover //\u9F20\u6807\u653E\u4E0A\u53BB<br>onmouseenter //\u9F20\u6807\u8FDB\u5165<br>onmouseout //\u9F20\u6807\u79BB\u5F00<br>onmouseleave //\u9F20\u6807\u79BB\u5F00<br>oncontextmenu //\u9F20\u6807\u53F3\u952E\u70B9\u51FB\u4E8B\u4EF6<br>onmousewheel //\u9F20\u6807\u4E2D\u952E</p><p>onkeyDown //\u952E\u76D8\u6309\u4E0B<br>onkeyUp //\u952E\u76D8\u62AC\u8D77<br>onkeyPress //\u952E\u76D8\u6309\u4E0B\u5E76\u62AC\u8D77</p><p>document.onkeydown = function (event) {<br>var e = event || window.event;<br>var code = e.keyCode || e.which; //\u952E\u76D8\u6309\u952E\u5BF9\u5E94\u7684ASCII\u7801<br>//\u7A7A\u683C32 \u56DE\u8F6613 \u5DE637 \u4E0A38 \u53F339 \u4E0B40<br>}</p><p>\u963B\u6B62\u4E8B\u4EF6\u5192\u6CE1<br>var e = event || window.event;<br>//e.cancleBubble = true;<br>if (e.stopPropagation) {<br>e.stopPropagation(); //\u73B0\u4EE3\u6D4F\u89C8\u5668<br>} else {<br>e.cancleBubble = true; //ie\u6D4F\u89C8\u5668\u652F\u6301<br>}<br>\u4E8B\u4EF6\u5192\u6CE1\uFF1A\u5F53\u6700\u91CC\u9762\u7684\u5143\u7D20\u89E6\u53D1\u4E8B\u4EF6\u65F6\uFF0C\u4F1A\u4F9D\u6B21\u5411\u4E0A\u89E6\u53D1\u6240\u6709\u5143\u7D20\u7684\u76F8\u540C\u4E8B\u4EF6</p><p>\u963B\u6B62\u9ED8\u8BA4\u4E8B\u4EF6<br>if (e.preventDefault) {<br>e.preventDefault(); //\u73B0\u4EE3\u6D4F\u89C8\u5668<br>} else {<br>//e.returnValue = false; //IE\u6D4F\u89C8\u5668<br>return false\uFF1B //\u4E5F\u53EF\u4EE5\u6E05\u9664\u9ED8\u8BA4\u4E8B\u4EF6<br>}</p><p>\u6E05\u9664\u4E8B\u4EF6 obj.onmouseup = null;</p><p>\u4E8B\u4EF6\u76D1\u542C\u7ED1\u5B9A\u4E8B\u4EF6<br>obj.onclick<br>obj.addEventListener(&#39;click&#39;, function() {}) //\u73B0\u4EE3\u6D4F\u89C8\u5668<br>obj.attachEvent(&#39;click&#39;, function () {}) //IE\u6D4F\u89C8\u5668</p><p>\u89E3\u51B3\u4E8B\u4EF6\u7ED1\u5B9A\u517C\u5BB9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addEvent</span> <span class="token punctuation">(</span><span class="token parameter">ele<span class="token punctuation">,</span> type<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>ele<span class="token punctuation">.</span>addEventListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	ele<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ele<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	ele<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">&#39;on&#39;</span><span class="token operator">+</span> type<span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      	ele<span class="token punctuation">[</span><span class="token string">&#39;on&#39;</span><span class="token operator">+</span>type<span class="token punctuation">]</span> <span class="token operator">=</span> cb<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u8D4B\u503C\u5F0F\u5220\u9664</span>
obj<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token comment">//\u5220\u9664\u4E8B\u4EF6\u76D1\u542C</span>
obj<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token comment">//\u73B0\u4EE3\u6D4F\u89C8\u5668</span>
obj<span class="token punctuation">.</span><span class="token function">detachEvent</span><span class="token punctuation">(</span><span class="token string">&#39;onclick&#39;</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span>  <span class="token comment">//IE\u6D4F\u89C8\u5668</span>

<span class="token comment">//onclick\u6DFB\u52A0\u4E8B\u4EF6\u4E0D\u80FD\u7ED1\u5B9A\u591A\u4E2A\u4E8B\u4EF6\uFF0C\u540E\u9762\u7684\u4F1A\u8986\u76D6\u524D\u9762\u7684</span>
<span class="token comment">//addEventListener(&#39;click&#39;, callback, false)</span>
<span class="token comment">//\u7B2C\u4E09\u4E2A\u53C2\u6570\u4E3Atrue\u65F6\uFF0C\u6D4F\u89C8\u5668\u91C7\u7528Capture(\u6355\u6349)</span>
<span class="token comment">//\u4E3Afalse\u65F6\uFF0C\u6D4F\u89C8\u5668\u91C7\u7528bubbling(\u5192\u6CE1)</span>
<span class="token comment">//\u4E8B\u4EF6onblur,onfocus\u4E0D\u652F\u6301\u5192\u6CE1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u4E8B\u4EF6\u59D4\u6258<br>\u4E8B\u4EF6\u59D4\u6258\u5C31\u662F\u5C06\u591A\u4E2A\u5B50\u5143\u7D20\u7684\u76F8\u540C\u4E8B\u4EF6\uFF0C\u6DFB\u52A0\u7ED9\u5171\u6709\u7684\u7236\u5143\u7D20\uFF0C\u5229\u7528\u4E8B\u4EF6\u5192\u6CE1\u7684\u539F\u7406\uFF0C\u914D\u5408\u4E8B\u4EF6\u5BF9\u8C61\u8EAB\u4E0A\u7684\u4E8B\u4EF6\u6E90\u5C5E\u6027\uFF0C\u627E\u5230\u5BF9\u5E94\u7684\u5143\u7D20\u505A\u5BF9\u5E94\u7684\u5904\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5904\u7406\u4E8B\u4EF6\u59D4\u6258\u517C\u5BB9</span>
<span class="token keyword">var</span> oul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span>
oul<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> e <span class="token operator">=</span> event <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>
  <span class="token keyword">var</span> target <span class="token operator">=</span> e<span class="token punctuation">.</span>target <span class="token operator">||</span> e<span class="token punctuation">.</span>srcElement<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span> target<span class="token punctuation">.</span>nodeName <span class="token operator">==</span> <span class="token string">&#39;LI&#39;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span>    
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><a name="SU9lG"></a></p>`,49);function P(S,E){const p=t("ExternalLinkIcon");return e(),o(l,null,[i,s("p",null,[k,b,m,d,f,s("a",y,[h,c(p)]),w,g,v,j,x]),_],64)}var T=u(r,[["render",P]]);export{T as default};
